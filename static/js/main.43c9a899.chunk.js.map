{"version":3,"sources":["Components/Card.js","Components/Styles/background.jpg","Components/Loading.js","Components/Styles/lost.jpg","Components/Losing.js","App.js","index.js"],"names":["Card","props","element","arr","map","item","index","className","src","img","onClick","cardClicked","id","alt","name","uniqid","Loading","Losing","handleRestart","App","useState","currentScore","setCurrentScore","highestScore","setHighestScore","level","setLevel","charArr","setCharArr","loading","setLoading","losing","setLosing","shuffle","array","sort","Math","random","a","fetch","mode","response","json","result","console","log","useEffect","getData","then","data","newData","slice","clicked","res","every","length","e","target","newCharArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43c9a899.chunk.js","sourcesContent":["import React from \"react\";\nimport uniqid from \"uniqid\";\nimport \"./Styles/Card.css\"\n\nexport default function Card(props) {\n    let element = props.arr.map((item, index) => {\n        return (\n          <div className=\"card\" key={uniqid()} >\n            <img src={item.img} onClick={props.cardClicked} id={index} alt=\"\"/>\n            <span>{item.name}</span>\n          </div>\n        )\n    })\n    \n    return (\n        <div className=\"cardContainer\">\n            {element}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/background.9987cd43.jpg\";","import React from \"react\";\nimport \"./Styles/Loading.css\"\n\nexport default function Loading() {\n\n    return (\n        <div className=\"loadingContainer\" >\n            <div className=\"lds-hourglass\"></div>\n            <span>Loading ...</span>\n        </div>\n    )\n\n}","export default __webpack_public_path__ + \"static/media/lost.05edec70.jpg\";","import React from \"react\"\nimport img from \"./Styles/lost.jpg\"\nimport \"./Styles/Losing.css\";\n\nexport default function Losing(props) {\n\n    return (\n        <div className=\"losingContainer\">\n            <img src={img} alt=\"\"/>\n            <span>You Lost Son <br/>Good Luck Next Time!</span>\n            <button onClick={props.handleRestart} >Restart</button>\n        </div>\n    )\n\n}","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"\nimport Card from \"./Components/Card\"\nimport img from \"./Components/Styles/background.jpg\"\nimport Loading from \"./Components/Loading\"\nimport Losing from \"./Components/Losing\";\n\nfunction App() {\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highestScore, setHighestScore] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [charArr, setCharArr] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [losing, setLosing] = useState(false)\n  \n  // Function That Shuflles an array\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n  \n  let charactersArr = [];\n\n  useEffect( () => {\n    if(!losing) {\n      setLoading(true);\n    \n      getData().then((data) => {\n        let newData = data.slice(0, (level + 1) *3 );\n        charactersArr = newData.map((item, index) => {\n          return {\n            clicked: false,\n            name: item.name,\n            img: item.img\n          }\n        })\n        return charactersArr;\n      }).then((res) => {\n        setCharArr(res)\n        setLoading(false);\n      });\n    }\n        \n  }, [level, losing])\n    \n  const cardClicked = (e) => {\n\n    if (!charArr[e.target.id].clicked) {\n      let newCharArr = charArr.map((item, index) => {\n        if (index == e.target.id) {\n          return ({\n            name: item.name,\n            img: item.img,\n            id: index,\n            clicked: true\n          })\n        } else {\n          return item;\n        }\n    \n      })\n      \n      shuffle(newCharArr)\n      setCharArr(newCharArr)\n      setCurrentScore(currentScore + 1)\n    } else {\n      setLosing(true);\n      \n    }\n  \n  }\n\n  useEffect(() => {\n    if (currentScore > highestScore) {\n      setHighestScore(currentScore);\n    }\n  }, [currentScore]);\n\n  useEffect(() => {\n    \n    let result = charArr.every((item) => {\n      return item.clicked\n    });\n\n    if (result && charArr.length > 0 ) {\n      setLevel(level + 1)\n    }\n\n  }, [charArr]);\n\n  const reset = () => {\n    setCurrentScore(0);\n  }\n\n  const handleLevel = () => {\n    setLevel(level + 1)  \n  }\n\n  async function getData() {\n    \n    try {\n        let response = await fetch(\"https://breakingbadapi.com/api/characters\", {mode: 'cors'});\n        response = await response.json();\n        \n        let result = response.map(item => {\n            return ({\n                name: item.name,\n                img: item.img\n            })\n        })\n\n        shuffle(result)\n\n        return result;\n        \n    } catch (err) {\n        console.log(\"errooooor\")\n    };\n  }\n\n  const handleRestart = () => {\n    setLosing(false)\n    setLevel(1)\n    reset()\n  }\n\n  if (loading) {\n    return (\n      <Loading/>\n    )\n  } else if (losing) {\n    return (\n      <Losing handleRestart={handleRestart}/>\n    )\n  } \n  else {\n\n    return (\n      <div className=\"App\">\n        <div className=\"appContainer\">\n          <header>\n            <div className=\"title\" >\n              <h1>The Breaking Bad <br/> Memory Card Game</h1>\n            </div>\n            <div className=\"gameStats\">\n              <div className=\"levelDiv\" >\n                <h1>Level: {level}</h1>\n              </div> \n              <div className=\"score\">\n                <h1>Current Score: {currentScore} </h1>\n                <h1>Highest Score: {highestScore} </h1>\n              </div> \n            </div>\n            <div className=\"description\">\n              <span>You have to click all the cards without clicking a card twice.</span>\n            </div>\n          </header>\n          <Card arr={charArr} cardClicked={cardClicked}/>\n        </div>\n        <div className=\"background\" >\n          <img src={img} alt=\"\"></img>\n        </div>\n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}